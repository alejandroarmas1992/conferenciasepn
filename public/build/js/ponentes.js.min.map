{"version":3,"sources":["ponentes.js"],"names":["ponentesInput","document","querySelector","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","e","ponente","target","ponentePrevio","classList","remove","add","value","dataset","ponenteId","async","respuesta","fetch","arrayPonentes","map","nombre","trim","apellido","id","formatearPonentes","json","obtenerPonentes","addEventListener","busqueda","length","expresion","RegExp","filter","toLowerCase","search","firstChild","removeChild","forEach","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","url","obtenerPonente","ponenteDOM"],"mappings":"CAAA,WACI,MAAMA,EAAgBC,SAASC,cAAc,aAE7C,GAAGF,EAAe,CACd,IAAIG,EAAW,GACXC,EAAoB,GAExB,MAAMC,EAAkBJ,SAASC,cAAc,qBACzCI,EAAgBL,SAASC,cAAc,uBAoF7C,SAASK,EAAmBC,GACxB,MAAMC,EAAUD,EAAEE,OAGZC,EAAgBV,SAASC,cAAc,4CAC1CS,GACCA,EAAcC,UAAUC,OAAO,2CAEnCJ,EAAQG,UAAUE,IAAI,2CAEtBR,EAAcS,MAAQN,EAAQO,QAAQC,WA3E1CC,iBACI,MACMC,QAAkBC,MADZ,kBAahB,SAA2BC,EAAgB,IACvClB,EAAWkB,EAAcC,IAAKb,IACnB,CACHc,OAAQ,GAAGd,EAAQc,OAAOC,UAAUf,EAAQgB,SAASD,SACrDE,GAAIjB,EAAQiB,MAdpBC,OADwBR,EAAUS,QApBtCC,GACA7B,EAAc8B,iBAAiB,SAuC/B,SAAwBtB,GACpB,MAAMuB,EAAWvB,EAAEE,OAAOK,MAE1B,GAAGgB,EAASC,OAAS,EAAG,CACpB,MAAMC,EAAY,IAAIC,OAAOH,EAAU,KACvC3B,EAAoBD,EAASgC,OAAO1B,IAChC,IAAsD,GAAnDA,EAAQc,OAAOa,cAAcC,OAAOJ,GACnC,OAAOxB,SAIfL,EAAoB,IAM5B,WAEI,KAAMC,EAAgBiC,YAClBjC,EAAgBkC,YAAYlC,EAAgBiC,YAGhD,GAAGlC,EAAkB4B,OAAS,EAC1B5B,EAAkBoC,QAAQ/B,IACtB,MAAMgC,EAAcxC,SAASyC,cAAc,MAC3CD,EAAY7B,UAAUE,IAAI,6BAC1B2B,EAAYE,YAAclC,EAAQc,OAClCkB,EAAYzB,QAAQC,UAAYR,EAAQiB,GACxCe,EAAYG,QAAUrC,EAGtBF,EAAgBwC,YAAYJ,SAE7B,CACH,MAAMK,EAAe7C,SAASyC,cAAc,KAC5CI,EAAalC,UAAUE,IAAI,kCAC3BgC,EAAaH,YAAc,qCAC3BtC,EAAgBwC,YAAYC,IAxBhCC,MAnDDzC,EAAcS,OACd,WACK,MAAMN,QAmBdS,eAA8BQ,GAC1B,MAAMsB,EAAM,mBAAmBtB,EACzBP,QAAkBC,MAAM4B,GAE9B,aADwB7B,EAAUS,OAtBRqB,CAAe3C,EAAcS,QAC7CQ,OAAEA,EAAME,SAAEA,GAAYhB,EAGtByC,EAAajD,SAASyC,cAAc,MAC1CQ,EAAWtC,UAAUE,IAAI,4BAA6B,2CACtDoC,EAAWP,YAAc,GAAGpB,KAAUE,IAEtCpB,EAAgBwC,YAAYK,IATjC,IAdX","file":"ponentes.js","sourcesContent":["(function() {\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if(ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n\n        const listadoPonentes = document.querySelector('#listado-ponentes')\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\n\n        obtenerPonentes();\n        ponentesInput.addEventListener('input', buscarPonentes)\n\n        if(ponenteHidden.value) {\n           (async() => {\n                const ponente = await obtenerPonente(ponenteHidden.value)\n                const { nombre, apellido} = ponente\n\n                // Insertar en el HTML\n                const ponenteDOM = document.createElement('LI');\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                ponenteDOM.textContent = `${nombre} ${apellido}`\n\n                listadoPonentes.appendChild(ponenteDOM)\n           })()\n        }\n\n        async function obtenerPonentes() {\n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n            formatearPonentes(resultado)\n        }\n\n        async function obtenerPonente(id) {\n            const url = `/api/ponente?id=${id}`;\n            const respuesta = await fetch(url)\n            const resultado = await respuesta.json()\n            return resultado;\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map( ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                } \n            })\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value;\n\n            if(busqueda.length > 3) {\n                const expresion = new RegExp(busqueda, \"i\");\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\n                        return ponente\n                    }\n                })\n            } else {\n                ponentesFiltrados = []\n            }\n\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while(listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\n            }\n\n            if(ponentesFiltrados.length > 0) {\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id\n                    ponenteHTML.onclick = seleccionarPonente\n\n                    // Añadir al dom\n                    listadoPonentes.appendChild(ponenteHTML)\n                })\n            } else {\n                const noResultados = document.createElement('P')\n                noResultados.classList.add('listado-ponentes__no-resultado')\n                noResultados.textContent = 'No hay resultados para tu búsqueda'\n                listadoPonentes.appendChild(noResultados)              \n            }\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\n            if(ponentePrevio) {\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\n\n            ponenteHidden.value = ponente.dataset.ponenteId\n        }\n    }\n})();"]}