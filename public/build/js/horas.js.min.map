{"version":3,"sources":["horas.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick"],"mappings":"CAAA,WAGI,GAFcA,SAASC,cAAc,UAE3B,CACN,MAAMC,EAAYF,SAASC,cAAc,yBACnCE,EAAOH,SAASI,iBAAiB,gBACjCC,EAAiBL,SAASC,cAAc,mBACxCK,EAAkBN,SAASC,cAAc,oBAE/CC,EAAUK,iBAAiB,SAAUC,GACrCL,EAAKM,QAASC,GAAOA,EAAIH,iBAAiB,SAAUC,IAGpD,IAAIG,EAAW,CACXC,cAAeV,EAAUW,OAAS,GAClCH,KAAML,EAAeQ,OAAS,IAmBlC,SAASL,EAAgBM,GACrBH,EAASG,EAAEC,OAAOC,MAAQF,EAAEC,OAAOF,MAGnCP,EAAgBO,MAAQ,GACxBR,EAAeQ,MAAQ,GAEvB,MAAMI,EAAajB,SAASC,cAAc,8BACvCgB,GACCA,EAAWC,UAAUC,OAAO,6BAG7BC,OAAOC,OAAOV,GAAUW,SAAS,KAIpCC,IAGJC,eAAeD,IACX,MAAMb,IAAEA,EAAGE,aAAEA,GAAiBD,EACxBc,EAAM,+BAA+Bf,kBAAoBE,IAEzDc,QAAkBC,MAAMF,IAKlC,SAAiCG,GAE7B,MAAMC,EAAe7B,SAASI,iBAAiB,aAC/CyB,EAAapB,QAAQqB,GAAMA,EAAGZ,UAAUa,IAAI,+BAG5C,MAAMC,EAAeJ,EAAQK,IAAKC,GAAUA,EAAOC,SAC7CC,EAAoBC,MAAMC,KAAKT,GAEnBO,EAAkBG,OAAQT,IAAQE,EAAaV,SAASQ,EAAGU,QAAQC,SAC3EhC,QAASqB,GAAMA,EAAGZ,UAAUC,OAAO,+BAEpBnB,SAASI,iBAAiB,8CAClCK,QAASiC,GAAQA,EAAKnC,iBAAiB,QAASoC,IAhBjEC,OADsBlB,EAAUmB,QAoBpC,SAASF,EAAgB7B,GAErB,MAAMG,EAAajB,SAASC,cAAc,8BACvCgB,GACCA,EAAWC,UAAUC,OAAO,6BAIhCL,EAAEC,OAAOG,UAAUa,IAAI,6BAEvBzB,EAAgBO,MAAQC,EAAEC,OAAOyB,QAAQC,OAGzCpC,EAAeQ,MAAQb,SAASC,cAAc,wBAAwBY,MAxEtEO,OAAOC,OAAOV,GAAUW,SAAS,KACjC,iBACUC,IAEN,MAAMuB,EAAKxC,EAAgBO,MAGrBkC,EAAmB/C,SAASC,cAAc,kBAAkB6C,OAClEC,EAAiB7B,UAAUC,OAAO,8BAClC4B,EAAiB7B,UAAUa,IAAI,6BAE/BgB,EAAiBC,QAAUL,GAV/B,IApBZ","file":"horas.js","sourcesContent":["(function(){\n    const horas = document.querySelector('#horas')\n\n    if(horas) {\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda)\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\n\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        }\n\n                \n        if(!Object.values(busqueda).includes('')) {\n            (async () => {\n                await buscarEventos();\n\n                const id = inputHiddenHora.value;\n\n                // Resaltar la hora actual\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\n\n                horaSeleccionada.onclick = seleccionarHora;\n            })()\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            // Reiniciar los campos ocultos y el selector de horas\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n            \n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if(horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            if(Object.values(busqueda).includes('')) {\n                return\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const { dia, categoria_id } = busqueda\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            // Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\n\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\n            const horasTomadas = eventos.map( evento => evento.hora_id);            \n            const listadoHorasArray = Array.from(listadoHoras);\n\n            const resultado = listadoHorasArray.filter( li =>  !horasTomadas.includes(li.dataset.horaId) );\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n            // Deshabilitar la hora previa, si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if(horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            // Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada')\n\n            inputHiddenHora.value = e.target.dataset.horaId\n\n            // Llenar el campo oculto de dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\n        }\n    }\n    \n})();"]}